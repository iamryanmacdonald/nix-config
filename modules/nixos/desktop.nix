{
  config,
  lib,
  myvars,
  pkgs,
  ...
}:
with lib; let
  cfgWayland = config.modules.desktop.wayland;
in {
  imports = [
    ./base
    ../base.nix

    ./desktop
  ];

  options.modules.desktop = {
    wayland = {
      enable = mkEnableOption "Wayland Display Server";
    };
  };

  config = mkMerge [
    (mkIf cfgWayland.enable {
      ####################################################################
      # NixOS' configuration for Wayland based window manager
      ####################################################################
      security.pam.services.swaylock = {};
      services = {
        greetd = {
          enable = false;
          settings = {
            default_session = {
              # .wayland-session is a script generated by home-manager, which links to the current wayland compositor (sway/hyprland, or other)
              # with such a non vendor-locking script, we can switch to another Wayland compositor without modifying greetd's configuration here.
              command = "$HOME/.wayland-session";
              # Wayland desktop manager is installed only for user ryan via home-manager.
              user = myvars.username;
            };
          };
        };
        xserver.enable = false; # disable xorg server
      };
      xdg.portal = {
        enable = true;
        extraPortals = with pkgs; [
          xdg-desktop-portal-wlr
        ];
        wlr.enable = true;
      };
    })
  ];
}
